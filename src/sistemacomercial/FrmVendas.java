/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sistemacomercial;

import Classe.Pedido;
import classesBase.NumberRenderer;
import Classe.Produto;
import Classe.Vendedor;
import Classe.ViewItensDoPedido;
import DAO.CaixaDAO;
import DAO.ItensDoPedidoDAO;
import DAO.PedidoDAO;
import DAO.ProdutoDAO;
import DAO.VendedorDAO;
import DAO.ViewItensDoPedidoDAO;
import classesBase.MyTableModel;
import java.awt.Color;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.NumberFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author hugo
 */
public class FrmVendas extends javax.swing.JFrame {

    public int cod;
    public String nome;
    private  ProdutoDAO dao = new ProdutoDAO("scv","root");
    private PedidoDAO daoPed = new PedidoDAO("scv","root");
    private ViewItensDoPedidoDAO daoItens = new ViewItensDoPedidoDAO("scv","root");
    private ItensDoPedidoDAO daoItensPed = new ItensDoPedidoDAO("scv","root");
    private VendedorDAO daoVendedor = new VendedorDAO("scv","root");
    private CaixaDAO daoCaixa = new CaixaDAO("scv","root");
    private Produto produto = new Produto();
    private Vendedor vendedor = new Vendedor();
    private List<ViewItensDoPedido> itensPedidoView;
    public double total = 0.0;
    private static final NumberFormat FORMAT = NumberFormat.getCurrencyInstance();
    private int numPedido = 0;
    private int numCaixa = 0;
    
    
    
    /**
     * Creates new form FrmVendas
     */
    public FrmVendas(int numPedido,int numCaixa) {
        initComponents();
        this.numPedido = numPedido;
        this.numCaixa = numCaixa;
        this.lblCodPedido.setText(String.valueOf(numPedido));
        this.txtTotal.setText(String.valueOf(total));
        lerItensDoPedido();
        //Modificar a cor de fundo do jScrollPanel
        jScrollPane1.getViewport().setBackground(Color.WHITE);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtNomeDoCliente = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtCodigoDoProduto = new javax.swing.JTextField();
        btnProcuraProduto = new javax.swing.JButton();
        btnProcuraCliente = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaItensDoPedido = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        txtCodigoDoVendedor = new javax.swing.JTextField();
        txtNomeDoVendedor = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        lblCodPedido = new javax.swing.JLabel();
        btnSair = new javax.swing.JButton();
        btnCancelarPedido = new javax.swing.JButton();
        btnApagarItem = new javax.swing.JButton();
        btnAlterarItem = new javax.swing.JButton();
        btnFinalizarPedido = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Venda de produtos");
        setBackground(new java.awt.Color(255, 255, 255));
        setName("frameVendas"); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Cliente");

        txtNomeDoCliente.setEditable(false);
        txtNomeDoCliente.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtNomeDoCliente.setText("Venda varejo");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Codigo do produto");

        txtCodigoDoProduto.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtCodigoDoProduto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCodigoDoProdutoFocusLost(evt);
            }
        });

        btnProcuraProduto.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnProcuraProduto.setText("Procurar ");
        btnProcuraProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcuraProdutoActionPerformed(evt);
            }
        });

        btnProcuraCliente.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnProcuraCliente.setText("....");
        btnProcuraCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcuraClienteActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Total:");

        txtTotal.setEditable(false);

        tabelaItensDoPedido.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabelaItensDoPedido);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Vendedor");

        txtCodigoDoVendedor.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtCodigoDoVendedor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCodigoDoVendedorFocusLost(evt);
            }
        });

        txtNomeDoVendedor.setEditable(false);
        txtNomeDoVendedor.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("CÃ³digo do pedido");

        lblCodPedido.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblCodPedido.setText("jLabel6");

        btnSair.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/success.png"))); // NOI18N
        btnSair.setText("Sair");
        btnSair.setPreferredSize(new java.awt.Dimension(73, 30));
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        btnCancelarPedido.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnCancelarPedido.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/lixo.png"))); // NOI18N
        btnCancelarPedido.setText("Cancelar Pedido");
        btnCancelarPedido.setPreferredSize(new java.awt.Dimension(100, 30));
        btnCancelarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarPedidoActionPerformed(evt);
            }
        });

        btnApagarItem.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnApagarItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/sair.png"))); // NOI18N
        btnApagarItem.setText("Apagar Item");
        btnApagarItem.setPreferredSize(new java.awt.Dimension(100, 30));
        btnApagarItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApagarItemActionPerformed(evt);
            }
        });

        btnAlterarItem.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnAlterarItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/editar.png"))); // NOI18N
        btnAlterarItem.setText("Alterar Item");
        btnAlterarItem.setPreferredSize(new java.awt.Dimension(100, 30));
        btnAlterarItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarItemActionPerformed(evt);
            }
        });

        btnFinalizarPedido.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnFinalizarPedido.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/success.png"))); // NOI18N
        btnFinalizarPedido.setText("Finalizar Pedido");
        btnFinalizarPedido.setPreferredSize(new java.awt.Dimension(73, 30));
        btnFinalizarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinalizarPedidoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 680, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnCancelarPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnApagarItem, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36)
                                .addComponent(btnAlterarItem, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtCodigoDoVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtNomeDoVendedor))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(txtCodigoDoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnProcuraProduto)
                                    .addGap(9, 9, 9))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtNomeDoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btnProcuraCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblCodPedido)))
                        .addGap(0, 323, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSair, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnFinalizarPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(lblCodPedido))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtNomeDoVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtCodigoDoVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNomeDoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnProcuraCliente))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtCodigoDoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnProcuraProduto))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAlterarItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnApagarItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancelarPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSair, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFinalizarPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void atualizaCliente(){
        this.txtNomeDoCliente.setText(nome);
    }
     public void atualizaProduto(){
        this.txtTotal.setText(total+"");
    }
    
    
    
    
    private void btnProcuraClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcuraClienteActionPerformed
       frmBuscaCliente frm = new frmBuscaCliente(this);
       frm.setVisible(true);
       this.txtNomeDoCliente.setText(nome);
    }//GEN-LAST:event_btnProcuraClienteActionPerformed

    private void btnProcuraProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcuraProdutoActionPerformed
        FrmBuscaProduto frm = new FrmBuscaProduto(this,this.numPedido);
        frm.setVisible(true);
        
    }//GEN-LAST:event_btnProcuraProdutoActionPerformed


    
    private void txtCodigoDoProdutoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCodigoDoProdutoFocusLost
       
        if(!"".equals(this.txtCodigoDoProduto.getText().trim())){
        try {
            produto = dao.buscarProdutoPorCodigo(Integer.parseInt(this.txtCodigoDoProduto.getText().trim()));
        } catch (SQLException ex) {
            Logger.getLogger(FrmVendas.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(produto.getCodigoDoProduto() == 0){
            try {
                produto = dao.buscarProdutoPorCodigoDeBarra(this.txtCodigoDoProduto.getText().trim());
            } catch (SQLException ex) {
                Logger.getLogger(FrmVendas.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if(produto.getCodigoDoProduto() == 0)
            JOptionPane.showMessageDialog(null,"Produto inexistente");
        else{
       FrmVendasProduto frm = new FrmVendasProduto(produto,this,this.numPedido);
       frm.setVisible(true);
       this.txtCodigoDoProduto.setText("");
       }
        }
    }//GEN-LAST:event_txtCodigoDoProdutoFocusLost

    private void txtCodigoDoVendedorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCodigoDoVendedorFocusLost
    if(!"".equals(this.txtCodigoDoVendedor.getText().trim())){
        try {
            vendedor = daoVendedor.buscarVendedorPorCodigo(Integer.parseInt(this.txtCodigoDoVendedor.getText().trim()));         
            } catch (SQLException ex) {
                Logger.getLogger(FrmVendas.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        this.txtCodigoDoVendedor.setText(String.valueOf(vendedor.getCodigoDoVendedor()));
        this.txtNomeDoVendedor.setText(vendedor.getNomeDoVendedor());    
    }//GEN-LAST:event_txtCodigoDoVendedorFocusLost

    private void btnCancelarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarPedidoActionPerformed
       int resp = JOptionPane.showConfirmDialog(null, 
                "Excluir Pedido", "VocÃª tem certeza que quer excluir...",JOptionPane.YES_NO_OPTION);
       if(resp == 0){
         daoPed.apagar(this.numPedido);
         daoItensPed.apagarTodosItensDeUmPedido(this.numPedido);
         this.dispose();
       }
    }//GEN-LAST:event_btnCancelarPedidoActionPerformed

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnSairActionPerformed

    private void btnApagarItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApagarItemActionPerformed
        int x;
        if(this.tabelaItensDoPedido.getSelectedRow() == -1)
           JOptionPane.showMessageDialog(null,"Aviso", "VocÃª deve selecionar um cliente a ser apagado",JOptionPane.OK_OPTION);
        else{
            x = JOptionPane.showConfirmDialog(this,"VocÃª tem certeza que quer apagar um Item?","Importante",JOptionPane.OK_CANCEL_OPTION);
            if(x == 0){
                int codPed = this.itensPedidoView.get(this.tabelaItensDoPedido.getSelectedRow()).getCodigoDoPedido();
                int codItens = this.itensPedidoView.get(this.tabelaItensDoPedido.getSelectedRow()).getCodigoDosItensDoPedido();
                daoItensPed.apagar(codItens,codPed);
                lerItensDoPedido();
        }
        
        }
            
       
        
    }//GEN-LAST:event_btnApagarItemActionPerformed

    private void btnAlterarItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarItemActionPerformed
  int x;
        if(this.tabelaItensDoPedido.getSelectedRow() == -1)
           JOptionPane.showMessageDialog(null,"VocÃª deve selecionar um cliente a ser apagado","Aviso", JOptionPane.OK_OPTION);
        else{
                ViewItensDoPedido v = this.itensPedidoView.get(this.tabelaItensDoPedido.getSelectedRow());
                FrmVendasProduto frmVendasProduto = new FrmVendasProduto(v,this,this.numPedido);
                frmVendasProduto.setVisible(true);
                
              

       
        
        }
            
    }//GEN-LAST:event_btnAlterarItemActionPerformed

    private void btnFinalizarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinalizarPedidoActionPerformed
        Calendar c = Calendar.getInstance();
        Date data = c.getTime();
        java.text.SimpleDateFormat formato =  new java.text.SimpleDateFormat("yyyy-MM-dd HH:mm:ss"); 
        Pedido pedido = new Pedido();
        pedido.setCodigoDoPedido(numPedido);
        pedido.setCodigoDoCliente(vendedor.getCodigoDoVendedor());
        pedido.setDataDoPedido( formato.format(data).toString());
        pedido.setValorTotalDoPedido(total);
        pedido.setPedidoAberto(false);
        pedido.setCodigoDoCaixaVinculadoAoPedido(this.numCaixa);
        System.out.println(pedido.toString());
      
        if(daoPed.finaliza(pedido)){
        JOptionPane.showMessageDialog(null,"Venda finalizada com sucesso!","Venda",JOptionPane.INFORMATION_MESSAGE);
        }else{
        JOptionPane.showMessageDialog(null,"Erro ao Finalizar a Venda!\n Entre em contato com o departamento tÃ©cnico!","Venda",JOptionPane.ERROR);
        }
        daoCaixa.atualizaAVenda(pedido);
        this.dispose();
      
        
    }//GEN-LAST:event_btnFinalizarPedidoActionPerformed

  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterarItem;
    private javax.swing.JButton btnApagarItem;
    private javax.swing.JButton btnCancelarPedido;
    private javax.swing.JButton btnFinalizarPedido;
    private javax.swing.JButton btnProcuraCliente;
    private javax.swing.JButton btnProcuraProduto;
    private javax.swing.JButton btnSair;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCodPedido;
    private javax.swing.JTable tabelaItensDoPedido;
    private javax.swing.JTextField txtCodigoDoProduto;
    private javax.swing.JTextField txtCodigoDoVendedor;
    private javax.swing.JTextField txtNomeDoCliente;
    private javax.swing.JTextField txtNomeDoVendedor;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables
 
    public void lerItensDoPedido() {
        try {
            this.itensPedidoView = daoItens.buscarViewItensDoPedidoPorPedido(this.numPedido);
            MyTableModel tab = new MyTableModel(ViewItensDoPedido.class,this.itensPedidoView,tabelaItensDoPedido);
            tabelaItensDoPedido.setModel(tab);
            
            tabelaItensDoPedido.removeColumn(tabelaItensDoPedido.getColumnModel().getColumn(1));
            int tam = tabelaItensDoPedido.getSize().width;
            tabelaItensDoPedido.getColumnModel().getColumn(0).setPreferredWidth((int) Math.floor(0.1*tam));
            tabelaItensDoPedido.getColumnModel().getColumn(1).setPreferredWidth((int) Math.floor(0.1*tam));
            tabelaItensDoPedido.getColumnModel().getColumn(2).setPreferredWidth((int) Math.floor(0.6*tam));
            tabelaItensDoPedido.getColumnModel().getColumn(3).setPreferredWidth((int) Math.floor(0.1*tam));
            tabelaItensDoPedido.getColumnModel().getColumn(4).setPreferredWidth((int) Math.floor(0.1*tam));
            //Colocar formato dineiro
            tabelaItensDoPedido.getColumnModel().getColumn(3).setCellRenderer(NumberRenderer.getCurrencyRenderer());
            // Centralizar dados no jTable
            DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
            centerRenderer.setHorizontalAlignment( JLabel.CENTER );
            tabelaItensDoPedido.getColumnModel().getColumn(0).setCellRenderer( centerRenderer );
            tabelaItensDoPedido.getColumnModel().getColumn(1).setCellRenderer( centerRenderer );
            tabelaItensDoPedido.getColumnModel().getColumn(4).setCellRenderer( centerRenderer );
            
           
            
            tabelaItensDoPedido.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            
            
            this.total = 0;
            for(int i=0;i < this.itensPedidoView.size();i++){
                this.total = this.total + this.itensPedidoView.get(i).getQuantidadeDeProdutos()*
                       this.itensPedidoView.get(i).getValorUnitarioDoProduto();
            }
            this.txtTotal.setText(FORMAT.format(this.total));
            
            
        } catch (SQLException ex) {
            Logger.getLogger(FrmProduto.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Erro: "+ex.getMessage());
        }
    }









}
